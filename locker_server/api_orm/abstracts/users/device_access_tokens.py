from django.db import models

from locker_server.settings import locker_server_settings


class AbstractDeviceAccessTokenORM(models.Model):
    """
    The AbstractDeviceAccessTokenORM is generated by a AbstractDeviceOMR. It represents a session and stores some
    information about the user and device in `access_token`
    - access_token: JWT token string store the user's information and device's information
    - expired_time: The expired time
    - granted_type: It is usually refresh_token
    - device: The Device object
    - sso_token_id: The CyStack SSO Token ID
    """
    access_token = models.TextField()
    expired_time = models.FloatField()
    grant_type = models.CharField(max_length=128, blank=True, null=True, default="")
    sso_token_id = models.CharField(max_length=128, null=True, default=None)
    device = models.ForeignKey(
        locker_server_settings.LS_DEVICE_MODEL, on_delete=models.CASCADE, related_name="device_access_tokens"
    )

    class Meta:
        abstract = True

    @classmethod
    def create(cls, device, **data):
        raise NotImplementedError
