# Generated by Django 3.2.20 on 2023-10-10 09:09
import json
import os

from django.db import migrations, models
import django.db.models.deletion


FIXTURE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), '../fixtures'))
FIXTURE_FILENAMES = ['mail_providers.json']


def get_swappable_model(fixture_filename):
    from locker_server.api_orm.models import MailProviderORM
    if fixture_filename == "mail_providers.json":
        return MailProviderORM


def load_fixtures(apps, schema_editor):
    for fixture_filename in FIXTURE_FILENAMES:
        fixture_file = os.path.join(FIXTURE_DIR, fixture_filename)
        fixture = open(fixture_file, 'rb')
        data = json.loads(fixture.read())
        model_orm = get_swappable_model(fixture_filename=fixture_filename)
        if not model_orm:
            continue
        objs = []
        for d in data:
            objs.append(model_orm(**d.get("fields")))

        results = model_orm.objects.bulk_create(objs, ignore_conflicts=True, batch_size=100)
        print(f"[+] Done load {len(results)} objects from {fixture_filename}")


def unload_fixtures(apps, schema_editor):
    """ Brutally deleting all entries for this model... """

    for fixture_filename in FIXTURE_FILENAMES:
        model_orm = get_swappable_model(fixture_filename=fixture_filename)
        if not model_orm:
            continue
        model_orm.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('api_orm', '0002_educationemailorm'),
    ]

    operations = [
        migrations.CreateModel(
            name='MailProviderORM',
            fields=[
                ('id', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('order_index', models.IntegerField(db_index=True)),
                ('available', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'cs_mail_providers',
            },
        ),
        migrations.CreateModel(
            name='MailConfigurationORM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mail_provider_options', models.CharField(blank=True, default='', max_length=512, null=True)),
                ('sending_domain', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('from_email', models.EmailField(blank=True, default=None, max_length=255, null=True)),
                ('from_name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('mail_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mail_configurations', to='api_orm.mailproviderorm')),
            ],
            options={
                'db_table': 'cs_mail_configurations',
            },
        ),
        # Load data from fixtures
        migrations.RunPython(load_fixtures, reverse_code=unload_fixtures),
    ]
